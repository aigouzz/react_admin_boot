{"version":3,"sources":["common/ProTable/filterControl/singleInput.js","common/ProTable/filterControl/singleSelect.js","common/ProTable/filterControl/rangePickerSelect.js","common/ProTable/filterControl/multiSelect.js","request/http.js","request/manage.js","common/SearchSelect/searchSelect.js","common/ProTable/filterControl/searchSelect.js","common/ProTable/filterControl/index.js","common/ProTable/TableForm.js","common/ProTable/columnsSetting.js","common/ProTable/ProTable.js","pages/modules/demo/demoList.js"],"names":["SingleInput","props","ref","value","onChange","formItemProps","placeholder","style","width","e","target","React","forwardRef","SingleSelect","Option","Select","options","allowClear","map","item","label","RangePicker","DatePicker","RangePickerSelect","values","showTime","format","Array","isArray","length","console","log","moment","s","multiSelect","mode","defaultValue","split","join","service","axios","create","baseURL","timeout","getAction","url","params","method","interceptors","request","use","config","csrftoken","Cookies","get","headers","error","code","message","msg","Promise","reject","response","data","status","resolve","Modal","info","content","onOk","window","location","hash","SearchInput","componentWillUnmount","setState","state","callback","fetchData","resetFields","searchParams","initialParams","page","page_size","then","res","finally","loading","handleSearch","undefined","debounce","leading","trailing","maxWait","this","prevProps","prevState","disabled","showSearch","filterOption","onSearch","notFoundContent","index","Component","SearchSelectComp","ControlUI","Map","set","MultiSelect","SearchSelect","ControlFactory","uiCode","args","has","createElement","Layout","styled","div","formItemLayout","labelCol","xs","span","sm","wrapperCol","FilterForm","filterForm","useState","isCollapse","setIsCollapse","Form","useForm","form","submit","getFieldsValue","onSubmit","useEffect","onFinish","gutter","type","align","xxl","xl","md","Item","labelTitle","title","initialValue","name","key","FilterControl","getControlComponent","marginLeft","marginBottom","padding","htmlType","className","onClick","prvState","viewBox","focusable","height","fill","d","TitleDiv","ColumnsSetting","columns","forEach","dataIndex","allCheckedKeys","filter","checkedKeys","setCheckedKeys","isCheckedAll","setIsCheckedAll","indeterminate","setIndeterminate","arrowPointAtCenter","checked","selectKeys","columnsChange","color","trigger","placement","maxHeight","overflow","itemHeight","draggable","checkable","onDrop","blockNode","onCheck","rowKeySelection","showLine","switcherIcon","treeData","SettingOutlined","formRef","ProTable","dataSource","setDataSource","tableColumns","setTableColumns","total","setTotal","setLoading","pagination","setPagination","selectedRowKeys","setSelectedRowKeys","selectedRows","setSelectedRows","FIRST_TIME_LOADING_TAG","searchFormValue","setSearchFormValue","forceUpdate","setForceUpdate","onRef","setPaginationMethod","a","warn","resetRowSelection","description","toolBarRender","beforeSearchSubmit","v","rowSelection","tablePaginationConfig","rowKey","columnsSettingDisabled","densityDisabled","density","other","filterColumns","o","hideInSearch","hidden","bordered","TableForm","wrappedComponentRef","setSearchFormValues","display","justifyContent","fontWeight","QuestionCircleOutlined","textAlign","reset","ReloadOutlined","val","i","j","push","extraColumns","size","hideInTable","render","text","find","isCopy","inputDom","document","body","appendChild","select","execCommand","remove","success","ellipsis","record","showSizeChanger","showQuickJumper","current","pageSize","showTotal","range","onShowSizeChange","getCheckboxProps","DemoList","setTimeout","demo","demo1","actions"],"mappings":"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","file":"static/js/2.33e38f55.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Input } from 'antd';\r\n\r\nconst SingleInput = (props, ref) => {\r\n    const {\r\n        value,\r\n        onChange,\r\n        formItemProps: {\r\n            placeholder = '请输入'\r\n        } = {}\r\n    } = props\r\n    return (\r\n        <Input\r\n            style={{ width: \"100%\" }}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onChange={(e) => {\r\n                onChange(e.target.value);\r\n            }} />\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(SingleInput);","import { Select } from 'antd';\r\nimport React from 'react'\r\n\r\nconst SingleSelect = (props, ref) => {\r\n    const Option = Select.Option;\r\n    let {\r\n        value,\r\n        onChange = () =>{},\r\n        formItemProps: {\r\n            placeholder = '请选择',\r\n            options\r\n        } = {}\r\n    } = props\r\n    options = typeof options === 'function' ? options() : options\r\n    return (\r\n        <Select style={{ width: \"100%\" }} allowClear placeholder={placeholder} value={value} onChange={(e) => {\r\n            onChange(e);\r\n        }}>\r\n            {options && options.map(item => (<Option value={item.value} key={item.value}>{item.label}</Option>))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(SingleSelect);","import { DatePicker } from 'antd'\r\nimport React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst RangePickerSelect = (props, ref) => {\r\n    const {\r\n        value,\r\n        onChange,\r\n        formItemProps: {\r\n            placeholder = '请输入'\r\n        } = {}\r\n    } = props\r\n    const transformTimeToDate = (values) => {\r\n        if (Array.isArray(values) && values.length === 2) {\r\n            console.log(values)\r\n            return values.map(item => item && moment(item))\r\n        }\r\n        return values\r\n    }\r\n\r\n\r\n    return (\r\n        <RangePicker\r\n            showTime\r\n            allowClear\r\n            format=\"YYYY-MM-DD HH:mm:ss\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder={placeholder}\r\n            value={transformTimeToDate(value)}\r\n            onChange={(e, s) => {\r\n                // console.warn('RangePicker', e, s)\r\n                onChange(s);\r\n            }} />\r\n    )\r\n}\r\n\r\nexport default React.forwardRef(RangePickerSelect);","import { Select } from 'antd';\r\nimport React, { forwardRef } from 'react'\r\n\r\nconst multiSelect = (props, ref) => {\r\n    const Option = Select.Option;\r\n    let {\r\n        value,\r\n        onChange,\r\n        formItemProps: {\r\n            placeholder = '请输入提示内容',\r\n            options\r\n        } = {}\r\n    } = props\r\n    options = typeof options === 'function' ? options() : options\r\n\r\n    return (\r\n        <Select\r\n            mode=\"multiple\"\r\n            allowClear\r\n            defaultValue={['a','b']}\r\n            value={value? value.split(','):[]}\r\n            style={{ width: '300px' }}\r\n            placeholder={placeholder}\r\n            onChange={(e) => {\r\n               onChange(e.join(','))\r\n            }}\r\n        >\r\n            {\r\n              options.map(item => (<Option value={item.value} key={item.value} >{item.label}</Option>))\r\n            }\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default forwardRef(multiSelect);","/**axios封装\r\n * 请求拦截、相应拦截、错误统一处理\r\n */\r\nimport { message, Modal } from \"antd\"\r\nimport axios from \"axios\"\r\nimport Cookies from \"js-cookie\"\r\n\r\nconst service = axios.create({\r\n    baseURL: \"\",\r\n    timeout: 30000\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n    (config) => {\r\n        let csrftoken = Cookies.get(\"csrftoken\")\r\n        csrftoken && (config.headers[\"X-CSRFToken\"] = csrftoken)\r\n        return config\r\n    },\r\n    (error) => {\r\n        switch (error.code) {\r\n            case 1012:\r\n                break\r\n            default:\r\n                message.error(error.msg) \r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n    (response) => {\r\n        // console.log('响应response', response)\r\n        const data = response.data\r\n        if (response.status === 200) {\r\n            switch (data.code) {\r\n                case 0:\r\n                    return Promise.resolve(data)\r\n                case 200:\r\n                    return Promise.resolve(data)\r\n                case -1:\r\n                    message.error(data.msg)\r\n                    return Promise.reject(data)\r\n                case 1012:\r\n                    Modal.info({\r\n                        content: data.msg,\r\n                        onOk() {\r\n                            window.location.hash = \"/login\"\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    message.error(data.msg)\r\n                    return Promise.reject(data)\r\n            }\r\n        } else {\r\n            message.error(data.msg)\r\n            return Promise.reject(data)\r\n        }\r\n    },\r\n    // 服务器状态码不是200的情况\r\n    (error) => {\r\n        // console.log('响应error', error, '响应error response', error.response)\r\n        message.error(error.response.data)\r\n        return Promise.reject(error.response.data)\r\n    }\r\n)\r\n\r\nexport { service as axios }\r\n","import { axios } from './http';\r\n\r\nexport function getAction(url, params) {\r\n    return axios({\r\n        url,\r\n        method: 'get',\r\n        params: params\r\n    })\r\n}\r\n\r\nexport function postAction(url, params) {\r\n    return axios({\r\n        url,\r\n        method: 'post',\r\n        data: params\r\n    })\r\n}\r\n\r\nexport function putAction(url, params) {\r\n    return axios({\r\n        url,\r\n        method: 'put',\r\n        data: params\r\n    })\r\n}\r\n\r\nexport function deleteAction(url, params) {\r\n    return axios({\r\n        url,\r\n        method: 'delete',\r\n        data: params\r\n    })\r\n}\r\n\r\nexport function httpAction(url, params, method, headers) {\r\n    return axios({\r\n        url,\r\n        method,\r\n        data: params,\r\n        headers\r\n    })\r\n}\r\n\r\nexport function formDataAction(url, data) {\r\n    return axios({\r\n        url,\r\n        method: 'post',\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        },\r\n        data,\r\n    })\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { getAction } from \"@/request/manage\";\r\nimport debounce from \"lodash/debounce\";\r\n/**\r\n * 通用远程搜索组件\r\n * props:\r\n *  url: 【String】 搜索链接地址\r\n *  resetField： 【Object】 用于重置请求后字段名称，示例 {value: 'id', label: 'name'}\r\n *  searchParams: 【String】 select搜索框的搜索字段\r\n *  initialParams: 【Object】初始化搜索字段\r\n */\r\nconst { Option } = Select;\r\nclass SearchInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            value: undefined,\r\n            loading: true,\r\n        };\r\n        this.fetchData = debounce(this.fetchData, 30, { leading: true, trailing: false, maxWait: 300 });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // console.log('prevProps', prevProps, 'prevState', prevState, 'state', this.state)\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.setState = (state, callback) => {\r\n            return;\r\n        };\r\n    };\r\n\r\n    fetchData = (value = \"\") => {\r\n        const { url = \"\", resetFields = { value: \"id\", label: \"name\" }, searchParams = \"name\", initialParams = {} } = this.props;\r\n        const params = {\r\n            page: 1,\r\n            page_size: 30,\r\n            ...initialParams\r\n        };\r\n        if (value) params[searchParams] = value;\r\n        getAction(url, params)\r\n            .then((res) => {\r\n                const result = res.data;\r\n                const data = result.map((item) => {\r\n                    return { value: item[resetFields.value], label: item[resetFields.label] };\r\n                });\r\n                this.setState({ data });\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    };\r\n\r\n    handleSearch = (value) => {\r\n        this.setState({ loading: true });\r\n        this.fetchData(value);\r\n    };\r\n\r\n    render() {\r\n        const { value, onChange, placeholder, disabled = false } = this.props;\r\n        const { loading, data } = this.state;\r\n        return (\r\n            <Select\r\n                showSearch\r\n                value={value}\r\n                placeholder={placeholder}\r\n                style={{ width: \"100%\" }}\r\n                filterOption={false}\r\n                onSearch={this.handleSearch}\r\n                onChange={(e) => {\r\n                    onChange(e);\r\n                }}\r\n                loading={loading}\r\n                disabled={disabled}\r\n                notFoundContent={\"暂无数据\"}\r\n            >\r\n                {data.map((item, index) => (\r\n                    <Option key={index} value={item.value}>\r\n                        {item.label}\r\n                    </Option>\r\n                ))}\r\n            </Select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchInput;\r\n","import React, { Component } from 'react';\r\nimport { SearchSelect } from \"@/common\";\r\n\r\nclass SearchSelectComp extends Component {\r\n\r\n    render() {\r\n        const {\r\n            value,\r\n            onChange,\r\n            formItemProps: {\r\n                placeholder = '请输入',\r\n                resetFields = { value: \"name\", label: \"name\" },\r\n                searchParams = 'name',\r\n                url = ''\r\n            } = {}\r\n        } = this.props\r\n        return (\r\n            <SearchSelect\r\n                value={value}\r\n                onChange={onChange}\r\n                url={url}\r\n                searchParams={searchParams}\r\n                resetFields={resetFields}\r\n                placeholder={placeholder}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchSelectComp;","import React from \"react\";\r\nimport SingleInput from \"./singleInput\"; //单行输入\r\nimport SingleSelect from \"./singleSelect\"; //单项选择\r\nimport RangePickerSelect from './rangePickerSelect'; //时间范围选择\r\nimport MultiSelect from './multiSelect'; //多项选择\r\nimport SearchSelect from './searchSelect' //远程搜索选择\r\n\r\nconst ControlUI = new Map();\r\n\r\nControlUI.set(\"input\", SingleInput)\r\nControlUI.set(\"select\", SingleSelect)\r\nControlUI.set(\"rangePickerSelect\", RangePickerSelect)\r\nControlUI.set(\"multiSelect\", MultiSelect)\r\nControlUI.set(\"searchSelect\", SearchSelect)\r\n\r\nexport default class ControlFactory {\r\n    static getControlComponent(uiCode, args) {\r\n        if (ControlUI.has(uiCode)) {\r\n            return React.createElement(ControlUI.get(uiCode), { ...args });\r\n        } else {\r\n            return (<>开发中</>)\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'antd'\r\nimport styled from 'styled-components';\r\nimport FilterControl from './filterControl'\r\nconst Layout = styled.div`\r\n    height: 100%;\r\n    background: #ffffff;\r\n    .collapse {\r\n        color: #4569d4;\r\n        text-decoration: none;\r\n        transition: opacity .2s;\r\n        outline: none;\r\n        cursor: pointer;\r\n        display: inline-block;\r\n        margin-left: 16px;\r\n    }\r\n    .table-form-anticon{\r\n        margin-left: 0.5em;\r\n        transition: all 0.3s ease 0s;\r\n        transform: rotate(0);\r\n        display: inline-block;\r\n        color: inherit;\r\n        font-style: normal;\r\n        line-height: 0;\r\n        text-align: center;\r\n        text-transform: none;\r\n        vertical-align: -.125em;\r\n        text-rendering: optimizeLegibility;\r\n        -webkit-font-smoothing: antialiased;\r\n    }\r\n`;\r\n\r\nconst collapseNum = 3; // 展开收起的数量\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 8 },\r\n        sm: { span: 6 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 16 },\r\n        sm: { span: 18 },\r\n    },\r\n}\r\nconst FilterForm = props =>{\r\n\r\n    const { filterForm } = props\r\n\r\n    const [isCollapse, setIsCollapse] = useState(true) //  默认 收起\r\n\r\n    const [form] = Form.useForm();\r\n    \r\n    const submit = () => {\r\n        const values = form.getFieldsValue()\r\n        if (props.onSubmit) {\r\n            props.onSubmit(values)\r\n        }\r\n    }\r\n\r\n    // const reset = () => {\r\n    //     form.resetFields()\r\n    //     submit()\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        submit()\r\n        // eslint-disable-next-line\r\n    }, []) \r\n\r\n    return (\r\n        <Layout>\r\n        {/* layout='inline' ant design 4.X 会很挤*/}\r\n            <Form\r\n                onFinish={() => {\r\n                    submit()\r\n                }}\r\n                {...formItemLayout}\r\n                form={form}\r\n            >\r\n                <Row gutter={[24, 24]} type=\"flex\" align=\"middle\">\r\n                    {/* xs sm md lg xl  xxl */}\r\n                    {/* filterForm的长度超过2个，则展开 收起 */}\r\n                    {filterForm.map((item, index) => (\r\n                        (((index + 1) > collapseNum && !isCollapse) || (index + 1) <= collapseNum) && <Col xxl={6} xl={8} md={12} xs={24} key={index}>\r\n                            <Form.Item style={{ width: '100%' }} \r\n                                label={item.formItemProps?.labelTitle || item.title} \r\n                                initialValue={item.initialValue}\r\n                                name={item.key}>\r\n                                {/* {getFieldDecorator(item.key || item.dataIndex, { initialValue: item.initialValue })(FilterControl.getControlComponent(item.type, { ...item }))} */}\r\n                                { FilterControl.getControlComponent(item.type, { ...item }) }\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                    ))}\r\n                    {filterForm.length > 0 && (\r\n                        <Col xxl={6} xl={8} md={12} xs={24}>\r\n                            <div style={{ marginLeft: '27px', marginBottom: '24px', padding: \"0 20px 0 0\" }}>\r\n                                <Button htmlType=\"submit\" type=\"primary\" style={{ marginLeft: 8 }}>查询</Button>\r\n                                <Button htmlType=\"reset\" type=\"reset\" style={{ marginLeft: 8 }}>重置</Button>\r\n                                {filterForm.length > collapseNum && <div className=\"collapse\" onClick={() => {\r\n                                    setIsCollapse(prvState => !prvState)\r\n                                }}>\r\n                                    {isCollapse ? '展开' : '收起'}\r\n                                    <span className=\"table-form-anticon\">\r\n                                        <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"down\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                                            <path d=\"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z\"></path>\r\n                                        </svg>\r\n                                    </span>\r\n                                </div>}\r\n                            </div>\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n            </Form>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default FilterForm\r\n","import { Popover, Checkbox, Tree } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SettingOutlined } from '@ant-design/icons'\r\nconst TitleDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 32px;\r\n`;\r\n\r\nconst ColumnsSetting = (props) => {\r\n    // /约定/ 此处应该 只有columns最后operate项不可 编辑\r\n    props.columns.forEach((item) => {\r\n        item.key = item.dataIndex || \"operate\";\r\n        item.disabled = !item.dataIndex;\r\n    });\r\n    \r\n    const allCheckedKeys = props.columns.map((item) => item.dataIndex).filter((item) => !!item) || [];\r\n    const [checkedKeys, setCheckedKeys] = useState(allCheckedKeys);\r\n    const [isCheckedAll, setIsCheckedAll] = useState(false);\r\n    const [indeterminate, setIndeterminate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIndeterminate(checkedKeys.length < allCheckedKeys.length);\r\n        setIsCheckedAll(checkedKeys.length === allCheckedKeys.length);\r\n    }, [checkedKeys]); // eslint-disable-line\r\n\r\n    return (\r\n        <Popover\r\n            arrowPointAtCenter\r\n            title={\r\n                <TitleDiv>\r\n                    <Checkbox\r\n                        indeterminate={indeterminate}\r\n                        checked={isCheckedAll}\r\n                        onChange={(e) => {\r\n                            let selectKeys = [];\r\n                            if (!isCheckedAll) {\r\n                                selectKeys = allCheckedKeys;\r\n                                setIsCheckedAll(true);\r\n                            } else {\r\n                                selectKeys = [];\r\n                                setIndeterminate(false);\r\n                            }\r\n                            setCheckedKeys(selectKeys);\r\n                            props.columnsChange(selectKeys);\r\n                        }}\r\n                    >\r\n                        列展示\r\n                    </Checkbox>\r\n                    <span \r\n                        style={{ color: '#1890ff' }}\r\n                        onClick={() => {\r\n                            setCheckedKeys(allCheckedKeys);\r\n                            props.columnsChange(allCheckedKeys);\r\n                        }}\r\n                    >\r\n                        重置\r\n                    </span>\r\n                </TitleDiv>\r\n            }\r\n            trigger=\"click\"\r\n            placement=\"bottomRight\"\r\n            content={\r\n                <div style={{ maxHeight: \"300px\", overflow: \"auto\" }}>\r\n                    <Tree\r\n                        itemHeight={24}\r\n                        draggable={false}\r\n                        checkable={true}\r\n                        onDrop={(info) => {\r\n                            // 功能为 优化的，较复杂 暂时没有写\r\n                            // const dropKey = info.node.key; // 目标\r\n                            // const dragKey = info.dragNode.key; // 拖拽\r\n                            // const { dropPosition, dropToGap } = info;\r\n                            // const position = dropPosition === -1 || !dropToGap ? dropPosition + 1 : dropPosition;\r\n                            // console.log('------onDrop', info, dragKey, dropKey, position)\r\n                            // move(dragKey, dropKey, position);\r\n                        }}\r\n                        blockNode\r\n                        onCheck={(rowKeySelection) => {\r\n                            setCheckedKeys(rowKeySelection);\r\n                            props.columnsChange(rowKeySelection);\r\n                        }}\r\n                        checkedKeys={checkedKeys}\r\n                        showLine={false}\r\n                        switcherIcon={false}\r\n                        height={280}\r\n                        treeData={props.columns}\r\n                    />\r\n                </div>\r\n            }\r\n        >\r\n            {/* ant design 3.X版本 */}\r\n            {/* <Icon type=\"setting\" /> */}\r\n            <SettingOutlined />\r\n        </Popover>\r\n    );\r\n};\r\n\r\nexport default ColumnsSetting;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Card, Tooltip, message } from 'antd';\r\nimport TableForm from './TableForm';\r\nimport { debounce } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ColumnsSetting from './columnsSetting';\r\nimport ExportExcel from 'js-export-excel';\r\nimport { ReloadOutlined, QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nconst Layout = styled.div`\r\n\t.mb20 {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\t.table-title {\r\n\t\tcolor: #555555;\r\n\t\tfont-weight: 500;\r\n\t\tfont-size: 15px;\r\n\t\t.table-title-description {\r\n\t\t\tdisplay: inline-block;\r\n\t\t\tmargin-left: 15px;\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\t}\r\n\t.copyStyle {\r\n\t\tdisplay: inline-block;\r\n\t\tcursor: pointer;\r\n\t\t&:hover {\r\n\t\t\t.ant-typography-copy {\r\n\t\t\t\tvisibility: visible !important;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-typography-copy {\r\n\t\t\tvisibility: hidden !important;\r\n\t\t}\r\n\t}\r\n\t.table-operation {\r\n\t\tcursor: pointer;\r\n\t\tmargin-left: 20px;\r\n\t\tdisplay: inline-block;\r\n\t}\r\n\t/* 多行文本省略 */\r\n\t.tabel-more-ellipsis {\r\n\t\toverflow: hidden;\r\n\t\ttext-overflow: ellipsis;\r\n\t\tdisplay: -webkit-box;\r\n\t\t-webkit-line-clamp: 1;\r\n\t\t-webkit-box-orient: vertical;\r\n\t\tword-break: break-word;\r\n\t\twhite-space: normal;\r\n\t}\r\n\t.ant-table-thead > tr > th {\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t.ant-table-row td {\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t.ant-table-scroll {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\r\n\ttbody {\r\n\t\t/* overflow: hidden !important;\r\n        height: 200px !important;\r\n        background-color: red !important; */\r\n\t}\r\n`;\r\n\r\n/**\r\n * @name 标准列表页组件\r\n *\r\n * @description 包含 搜素表单 列表分页 工具条  这三部分生成\r\n * @copyright tujindong\r\n *\r\n * ProTable 封装了分页和搜索表单的 table组件\r\n */\r\n\r\nlet formRef = null\r\nconst ProTable = props =>{\r\n    // const [density, setDensity] = useState('default')\r\n    const density = 'default'\r\n    // const [tableHeight, setTableHeight] = useState(window.innerHeight)\r\n    const [dataSource, setDataSource] = useState([])\r\n    const [tableColumns, setTableColumns] = useState(props.columns||[])\r\n    const [total, setTotal] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [pagination, setPagination] = useState({\r\n        page: 1,\r\n        page_size: 10\r\n    })\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n    const [selectedRows, setSelectedRows] = useState([])\r\n    const [searchFormValue, setSearchFormValue] = useState({ FIRST_TIME_LOADING_TAG: true })\r\n    const [forceUpdate, setForceUpdate] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        const { onRef } = props\r\n        onRef && onRef(this)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(forceUpdate === true){\r\n            fetchData()\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [pagination, searchFormValue, forceUpdate])\r\n\r\n    //设置初始化选中值\r\n    // eslint-disable-next-line\r\n    const setInitialSelectionRowKeys = (selectedRowKeys) => {\r\n        setSelectedRowKeys(selectedRowKeys)\r\n    };\r\n\r\n    //设置分页\r\n    const setPaginationMethod = (page, page_size) => {\r\n        setPagination({ page, page_size })\r\n    };\r\n\r\n    //请求列表数据\r\n    const fetchData = debounce(async (params = {}) => {\r\n        let { request } = props;\r\n        // 如果没有request，模拟请求\r\n        if (!request) return;\r\n        setLoading(true)\r\n        try {\r\n            const data = await request({ ...searchFormValue, ...pagination, ...params });\r\n            // 如果查总条数 小于 page*page_size\r\n            if (data.total < ((pagination.page - 1) * pagination.page_size + 1) && data.total !== 0) {\r\n                setPaginationMethod(prevState=>{\r\n                    return {\r\n                        pagination: {\r\n                            page: prevState.pagination.page - 1,\r\n                            page_size: prevState.pagination.page_size\r\n                        }\r\n                    }\r\n                }, ()=>{\r\n                    fetchData()\r\n                })\r\n            }\r\n            setDataSource(data.data)\r\n            setTotal(data.total)\r\n            setLoading(false)\r\n            setForceUpdate(false)\r\n        } catch (error) {\r\n            console.warn(error);\r\n            message.warn(error.msg);\r\n            setDataSource([])\r\n            setLoading(false)\r\n            setForceUpdate(false)\r\n        }\r\n    }, 30, { leading: true, trailing: false, maxWait: 300 });\r\n\r\n    //设置搜索表单数据\r\n    const setSearchFormValues = (values) => {\r\n        setSearchFormValue(values)\r\n    };\r\n\r\n    //重置表格选择\r\n    const resetRowSelection = () => {\r\n        setSelectedRowKeys([])\r\n        setSelectedRows([])\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const getSearchFormValue = () => {\r\n        return { params: { ...searchFormValue, ...pagination }, searchFormValue, pagination };\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const reload = () => {\r\n        fetchData();\r\n        resetRowSelection();\r\n    };\r\n\r\n    const reset = () => {\r\n        if (formRef && formRef.reset) {\r\n            setForceUpdate(true)\r\n            formRef.reset();\r\n            resetRowSelection();\r\n        }\r\n    };\r\n\r\n    // eslint-disable-next-line \r\n    const exportFile = (fileName = '导出文件') => {\r\n        //前端文件导出的办法，仅仅导出选中项\r\n        if (!selectedRows.length) {\r\n            message.info('请先选择导出项');\r\n            return;\r\n        }\r\n        const validColumns = columns.filter((item) => !!item.dataIndex);\r\n        const maps = {};\r\n        validColumns.forEach((item) => {\r\n            let key = item.type === 'select' ? `${item.dataIndex}_name` : item.dataIndex;\r\n            maps[key] = item.title;\r\n        });\r\n        const sheetData = selectedRows.map((item) => {\r\n            const newItem = {};\r\n            Object.keys(item).forEach((key) => {\r\n                if (maps[key]) newItem[maps[key]] = item[key];\r\n            });\r\n            return newItem;\r\n        });\r\n        const sheetHeader = sheetData.length ? Object.keys(sheetData[0]).map((item) => item) : [];\r\n        const options = {\r\n            fileName,\r\n            datas: [\r\n                {\r\n                    sheetName: 'sheet',\r\n                    sheetHeader,\r\n                    sheetData\r\n                }\r\n            ]\r\n        };\r\n        const exportExcel = new ExportExcel(options);\r\n        exportExcel.saveExcel();\r\n    };\r\n\r\n    // eslint-disable-next-line \r\n    const importFile = () => {\r\n        //导入方法 待完善\r\n        console.log('文件导入');\r\n    };\r\n\r\n    //列排序以及界面增删显示\r\n    const handleColumnsChange = (val) => {\r\n        const { columns } = props;\r\n        const tableColumns = [];\r\n        for (let i of columns) {\r\n            for (let j of val) {\r\n                if (i.dataIndex === j) {\r\n                    tableColumns.push(i);\r\n                }\r\n            }\r\n        }\r\n        // /约定/ 此处应该 只有columns最后operate项不可 编辑\r\n        const extraColumns = columns.filter(item => !item.dataIndex);\r\n        setTableColumns([...tableColumns, ...extraColumns])\r\n    };\r\n\r\n    \r\n    const {\r\n        title = '高级表格',\r\n        description = '',\r\n        request,\r\n        toolBarRender,\r\n        beforeSearchSubmit = (v) => v,\r\n        rowSelection,\r\n        pagination: tablePaginationConfig,\r\n        rowKey,\r\n        columns,\r\n        columnsSettingDisabled = false,\r\n        density: densityDisabled,\r\n        ...other\r\n    } = props;\r\n    const filterColumns = columns.filter((o) => o.type && !o.hideInSearch);\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"filter-wrap mb20\" hidden={filterColumns.length === 0}>\r\n                <Card bordered={false}>\r\n                    <TableForm\r\n                        wrappedComponentRef={(ref) => (formRef = ref)}\r\n                        onSubmit={(values) => {\r\n                            setPaginationMethod(1, pagination.page_size);\r\n                            resetRowSelection();\r\n                            setSearchFormValues(beforeSearchSubmit(values));\r\n                        }}\r\n                        filterForm={filterColumns}\r\n                    />\r\n                </Card>\r\n            </div>\r\n            <Card bordered={false}>\r\n                {toolBarRender && (\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div className=\"table-title\">\r\n                            <span style={{ fontWeight: 'bold' }}>{title}</span>\r\n                            {description && (\r\n                                <span className=\"table-title-description\">\r\n                                    <Tooltip placement=\"right\" title={description}>\r\n                                        {/* ant design 3.X版本 */}\r\n                                        {/* <Icon style={{ color: '#666666' }} type=\"question-circle\" theme=\"filled\" /> */}\r\n                                        <QuestionCircleOutlined />\r\n                                    </Tooltip>\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                        {\r\n                            <div style={{ textAlign: 'right' }} className=\"mb20\">\r\n                                {toolBarRender(this, { selectedRowKeys, selectedRows, dataSource })}\r\n                                <Tooltip title=\"刷新\">\r\n                                    <div className=\"table-operation\" onClick={() => reset()}>\r\n                                        {/* ant design 3.X版本 */}\r\n                                        {/* <Icon type=\"reload\" /> */}\r\n                                        <ReloadOutlined />\r\n                                    </div>\r\n                                </Tooltip>\r\n                                {!columnsSettingDisabled && (\r\n                                    <Tooltip title=\"列设置\">\r\n                                        <div className=\"table-operation\">\r\n                                            <ColumnsSetting\r\n                                                columns={columns}\r\n                                                columnsChange={handleColumnsChange}\r\n                                            />\r\n                                        </div>\r\n                                    </Tooltip>\r\n                                )}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n\r\n                {/* {selectedRowKeys.length > 0 && `已选中${selectedRowKeys.length}项`} */}\r\n                <Table\r\n                    {...other}\r\n                    size={densityDisabled || density}\r\n                    loading={loading}\r\n                    rowKey={rowKey}\r\n                    dataSource={dataSource}\r\n                    columns={tableColumns.filter((o) => !o.hideInTable).map((o) => {\r\n                        if (!o.render) {\r\n                            if (\r\n                                o.type === 'select' &&\r\n                                !o.render &&\r\n                                o.formItemProps &&\r\n                                Array.isArray(o.formItemProps.options)\r\n                            ) {\r\n                                o.render = (text) => {\r\n                                    try {\r\n                                        const target = o.formItemProps.options.find((item) => item.value === text);\r\n                                        return (target ? target.label : text) || '-';\r\n                                    } catch (e) {\r\n                                        return text || '-';\r\n                                    }\r\n                                };\r\n                            } else {\r\n                                o.render = (text) => (\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            if (!o.isCopy) return;\r\n                                            let inputDom = document.createElement('input');\r\n                                            document.body.appendChild(inputDom);\r\n                                            inputDom.value = text;\r\n                                            inputDom.select(); // 选中\r\n                                            document.execCommand('copy', false);\r\n                                            inputDom.remove(); //移除\r\n                                            message.success('复制成功');\r\n                                        }}\r\n                                    >\r\n                                        {text || '-'}\r\n                                    </div>\r\n                                );\r\n                            }\r\n                        }\r\n                        if (o.ellipsis) {\r\n                            o.ellipsis = false;\r\n                            let render = o.render;\r\n                            o.render = (text, record, index) => (\r\n                                <div className=\"tabel-more-ellipsis\">\r\n                                    <Tooltip placement=\"topLeft\" title={render(text, record, index)}>\r\n                                        {render(text, record, index)}\r\n                                    </Tooltip>\r\n                                </div>\r\n                            );\r\n                        }\r\n                        return o;\r\n                    })}\r\n                    pagination={{\r\n                        ...tablePaginationConfig,\r\n                        total,\r\n                        showSizeChanger: true,\r\n                        showQuickJumper: true,\r\n                        current: pagination.page,\r\n                        pageSize: pagination.page_size,\r\n                        showTotal: (total, range) => `共${total}条`,\r\n                        onChange: (page, page_size) => {\r\n                            setPaginationMethod(page, page_size);\r\n                        },\r\n                        onShowSizeChange: (current, pageSize) => {\r\n                            setPaginationMethod(current, pageSize);\r\n                        }\r\n                    }}\r\n                    rowSelection={\r\n                        rowSelection ? (\r\n                            {\r\n                                selectedRowKeys,\r\n                                ...rowSelection,\r\n                                onChange: (selectedRowKeys, selectedRows) => {\r\n                                    if (rowSelection && rowSelection.onChange) {\r\n                                        rowSelection.onChange(selectedRowKeys, selectedRows);\r\n                                    }\r\n                                    setSelectedRowKeys(selectedRowKeys)\r\n                                    setSelectedRows(selectedRows)\r\n                                },\r\n                                getCheckboxProps: (record) => {\r\n                                    if (rowSelection && rowSelection.getCheckboxProps) {\r\n                                        return rowSelection.getCheckboxProps(record, {\r\n                                            selectedRowKeys,\r\n                                            selectedRows,\r\n                                            dataSource\r\n                                        });\r\n                                    }\r\n                                    return undefined;\r\n                                }\r\n                            }\r\n                        ) : (\r\n                            undefined\r\n                        )\r\n                    }\r\n                />\r\n            </Card>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nProTable.propTypes = {\r\n    /**\r\n     * @description 表格标题或名称\r\n     */\r\n    title: PropTypes.string,\r\n    /**\r\n     * @description 表格描述\r\n     */\r\n    description: PropTypes.string,\r\n    /**\r\n     * @description 一个获得 dataSource 的方法\r\n     *\r\n     * ```js\r\n     * //类型\r\n     * (params?: {pageSize: number;page: number;[key: string]: any;}) => Promise<RequestData<T>>\r\n     * ```\r\n     */\r\n\r\n    request: PropTypes.func.isRequired,\r\n    /**\r\n       * @description 工具条渲染\r\n       * \r\n       * ```ts\r\n       * toolBarRender?: (\r\n              ref,\r\n              rows: {\r\n              selectedRowKeys?: (string | number)[];\r\n              selectedRows?: T[];\r\n              },\r\n          ) => React.ReactNode[];\r\n       * ```\r\n       */\r\n    toolBarRender: PropTypes.func,\r\n\r\n    /**\r\n     * @description 搜索提交前对数据加工\r\n     *\r\n     * ```js\r\n     * //类型\r\n     * (params:T)=>T\r\n     *\r\n     * //例子\r\n     * (values) => ({...values, current: values.page})\r\n     * ```\r\n     */\r\n    beforeSearchSubmit: PropTypes.func,\r\n\r\n    /**\r\n     * @description 行选择\r\n     *\r\n     * ```js\r\n     * rowSelection={{}} //开启行选择\r\n     *\r\n     * rowSelection={{onChange: (keys,rows)=> console.log(keys,rows)}} // 获取rows\r\n     * ```\r\n     */\r\n    rowSelection: PropTypes.object,\r\n\r\n    /**\r\n     * @description 分页属性\r\n     *\r\n     * ```js\r\n     * // 不是必输的 内部自动控制\r\n     * ```\r\n     */\r\n    pagination: PropTypes.object,\r\n\r\n    /**\r\n     * @description record主键  用法与table一致\r\n     */\r\n    rowKey: PropTypes.string,\r\n\r\n    /**\r\n     * @description 字段列表   变化比较大\r\n     *\r\n     * ```js\r\n     * // 1. 增加表单生成\r\n     * columns = [{\r\n     *     title: '',\r\n     *\r\n     *     // 输入type 和 dataIndex后就会自动生成表单搜索项\r\n     *     dataIndex: 'school_name',\r\n     *     type: 'input',  // type 可选类型  'input' | 'select'\r\n     *\r\n     *     // 表单属性控制项\r\n     *     initialValue,\r\n     *     formItemProps: {\r\n     *         // select 属性多一个 options\r\n     *         options: {value, object}[]\r\n     *         placeholder: '',\r\n     *         ...\r\n     *     }\r\n     * }]\r\n     *\r\n     * // 2. hideInTable 控制字段是否显示  默认false   true: 隐藏  false: 显示\r\n     * columns=[{\r\n     *     title: '',\r\n     *     hideInTable: boolean | (values: searchFormValue) => boolean\r\n     * }]\r\n     *\r\n     * // 3. hideInSearch 控制表单显示  默认false   true: 隐藏  false: 显示\r\n     * columns=[{\r\n     *     title: '',\r\n     *     hideInSearch:  PropTypes.bool\r\n     * }]\r\n     * ```\r\n     */\r\n    columns: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ProTable;\r\n","import ProTable from '@/common/ProTable/ProTable'\r\nimport { Button } from 'antd'\r\n\r\nconst DemoList = props => {\r\n    return (\r\n        <ProTable\r\n            title=\"戏如人森\"\r\n            description=\"不要看我，只是个demo\"\r\n            request={() => {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        resolve({\r\n                            total: 10,\r\n                            data: [\r\n                                {\r\n                                    demo: 'demo数据1',\r\n                                    demo1: 'demo1',\r\n                                    key: 'demo'\r\n                                }, {\r\n                                    demo: 'demo数据2',\r\n                                    key: 'demo1'\r\n                                }\r\n                            ]\r\n                        })\r\n                    }, 1000)\r\n                })\r\n            }}\r\n            columns={[{\r\n                dataIndex: 'demo',\r\n                title: 'demo',\r\n                type: 'input'\r\n            }, {\r\n                dataIndex: 'demo1',\r\n                title: 'demo1',\r\n                type: 'select',\r\n                formItemProps: {\r\n                    options: [{\r\n                        value: '1111',\r\n                        label: 'demo1'\r\n                    }, {\r\n                        value: '2222',\r\n                        label: 'demo2'\r\n                    }]\r\n                }\r\n            }]}\r\n            toolBarRender={(actions, { selectedRowKeys, selectedRows }) => (\r\n                <>\r\n                    <Button type=\"primary\" onClick={() => { }}>\r\n                        新增\r\n                    </Button>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\nexport default DemoList;"],"sourceRoot":""}